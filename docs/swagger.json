{
    "swagger": "2.0",
    "info": {
        "description": "api-service  API",
        "title": "api-service API",
        "contact": {}
    },
    "paths": {
        "/api/v1/agents": {
            "post": {
                "description": "Save Agents terminal information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Save Agents terminal information",
                "parameters": [
                    {
                        "description": "Agents Terminal Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "agent name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/agents/{name}": {
            "get": {
                "description": "Get Agents terminal info by agent name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Get Agents terminal info by agent name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "agent name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/applications": {
            "get": {
                "description": "Get all applications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Get all applications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Loads Repositories",
                        "name": "loadRepositories",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Loads Applications",
                        "name": "loadApplications",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Loads Token",
                        "name": "loadToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Update Application by company id and  repository id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Update Application",
                "parameters": [
                    {
                        "description": "ApplicationWithUpdateOption Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "repository Id",
                        "name": "repositoryId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company Update Option",
                        "name": "companyUpdateOption",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/applications/{id}": {
            "get": {
                "description": "Get application by appliction id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Get application by appliction id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository id",
                        "name": "repositoryId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/applications/{id}/pipeline": {
            "put": {
                "description": "Update application pipeline",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Update application pipeline",
                "parameters": [
                    {
                        "description": "pipeline",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "repository id",
                        "name": "repositoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Create application pipeline",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Create application pipeline",
                "parameters": [
                    {
                        "description": "pipeline",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "repository id",
                        "name": "repositoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/bitbuckets/branches": {
            "get": {
                "description": "Gets Branches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bitbucket"
                ],
                "summary": "Get Branches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Id",
                        "name": "repoId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/bitbuckets/commits": {
            "get": {
                "description": "Gets Commit By Branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bitbucket"
                ],
                "summary": "Get Commit By Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Id",
                        "name": "repoId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch",
                        "name": "branch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/companies": {
            "get": {
                "description": "Gets companies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get companies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Loads Repositories",
                        "name": "loadRepositories",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Loads Applications",
                        "name": "loadApplications",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Loads Token",
                        "name": "loadToken",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Saves company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Save company",
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/{id}": {
            "get": {
                "description": "Gets company by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "action [dashboard_data]",
                        "name": "action",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/{id}/applications": {
            "get": {
                "description": "Gets RApplications by company id and repository type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get Applications by company id and repository type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository Type",
                        "name": "repository_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/{id}/repositories": {
            "get": {
                "description": "Gets RepositoriesDto by company id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get RepositoriesDto by company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "updates repositories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update repositories by company id",
                "parameters": [
                    {
                        "description": "List Of Repositories data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company Update Option",
                        "name": "companyUpdateOption",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/{id}/repositories/{repoId}/webhooks": {
            "patch": {
                "description": "Update Webhook",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Update Webhook to Enable or Disable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "action type [enable/disable]",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository type [github/bitbucket]",
                        "name": "repoType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository id",
                        "name": "repoId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Webhook Id to disable webhook",
                        "name": "webhookId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/githubs/branches": {
            "get": {
                "description": "Gets Branches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Get Branches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Id",
                        "name": "repoId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/githubs/commits": {
            "get": {
                "description": "Gets commit by branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Get commit by branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "branch",
                        "name": "branch",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository Id",
                        "name": "repoId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/kube_events": {
            "post": {
                "description": "Stores k8s event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KubeEvent"
                ],
                "summary": "Save k8s event",
                "parameters": [
                    {
                        "description": "KubeEvent Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/kube_objects": {
            "get": {
                "description": "Api for getting all kube objects by object name, agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KubeObject"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "action [dashboard_data]",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "object [certificate/cluster-role/cluster-role-binding/config-map/daemon-set/deployment/ingress/namespace/network-policy/node/pod/persistent-volume/persistent-volume-claim/replica-set/role/role-binding/secret/service/service-account/stateful-set]",
                        "name": "object",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/logs": {
            "post": {
                "description": "Stores logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log"
                ],
                "summary": "Save log",
                "parameters": [
                    {
                        "description": "LogEvent Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines": {
            "get": {
                "description": "Get Pipeline for validation by repository id, application url and revision",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline"
                ],
                "summary": "Get Pipeline for validation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "action [GET_PIPELINE_FOR_VALIDATION/dashboard_data",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repository id",
                        "name": "repositoryId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "application url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "commit id or branch name",
                        "name": "revision",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "From Data",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To Data",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Pipeline by repository id, application url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline"
                ],
                "summary": "Update Pipeline",
                "parameters": [
                    {
                        "description": "pipeline",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Repository id",
                        "name": "repositoryId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Pipeline by repository id, application url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline"
                ],
                "summary": "Create Pipeline",
                "parameters": [
                    {
                        "description": "pipeline",
                        "name": "pipeline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Repository id",
                        "name": "repositoryId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines/ws": {
            "get": {
                "description": "Get events by process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline"
                ],
                "summary": "Get events by process id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company_id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/pipelines/{processId}": {
            "get": {
                "description": "Gets Pipeline or logs by pipeline processId [If action is \"get_pipeline\", then pipeline will be returned or logs will be returned. Available if local storage is enabled]",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline"
                ],
                "summary": "Get Pipeline or logs [available if local storage is enabled]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline ProcessId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "action",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/process_life_cycle_events": {
            "get": {
                "description": "Pulls auto trigger enabled steps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProcessLifeCycle"
                ],
                "summary": "Pull Steps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agen name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pull size",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Step type [BUILD, DEPLOY]",
                        "name": "step_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Stores process lifecycle event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProcessLifeCycle"
                ],
                "summary": "Save process lifecycle event",
                "parameters": [
                    {
                        "description": "ProcessLifeCycleEventList Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/processes": {
            "get": {
                "description": "Get Process List or count process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get Process List or count process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository Id",
                        "name": "repositoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "App Id",
                        "name": "appId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Commit Id",
                        "name": "commitId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Commit Id",
                        "name": "appId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From Date",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To Date",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operation[countTodaysProcessByCompanyId/countProcessByCompanyIdAndDate]",
                        "name": "operation",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/processes/{processId}": {
            "get": {
                "description": "Get Process by Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get Process by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProcessId",
                        "name": "processId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/processes/{processId}/steps/{step}/footmarks": {
            "get": {
                "description": "Get Footmarks By Process Id And Step",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get Footmarks By Process Id And Step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Step",
                        "name": "step",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/processes/{processId}/steps/{step}/footmarks/{footmark}/logs": {
            "get": {
                "description": "Get logs by Footmarks, Process Id And Step",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get logs by Footmarks, Process Id And Step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Step",
                        "name": "step",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Footmark",
                        "name": "footmark",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claims",
                        "name": "claims",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/processes_events": {
            "post": {
                "description": "Stores Pipeline process event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProcessEvent"
                ],
                "summary": "Save Pipeline process event",
                "parameters": [
                    {
                        "description": "PipelineProcessEvent Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/repositories/{id}": {
            "get": {
                "description": "Get repository by repository id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repository"
                ],
                "summary": "Get repository by repository id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "repository id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Load applications",
                        "name": "loadApplications",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/repositories/{id}/applications": {
            "get": {
                "description": "Get applications by repository id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repository"
                ],
                "summary": "Get applications by repository id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "repository id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record count",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.MetaData": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "common.ResponseDTO": {
            "type": "object",
            "properties": {
                "_metadata": {
                    "$ref": "#/definitions/common.MetaData"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}